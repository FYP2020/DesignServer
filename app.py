import base64
import io

import cv2
import numpy as np
# from PIL.Image import Image
from PIL import Image
from flask import Flask, request, jsonify
from WCT.stylize import main
import boto3
from botocore.exceptions import NoCredentialsError
# from flask.ext.uuid import FlaskUUID
import uuid

ACCESS_KEY = 'AKIAXVFMVVXL22DN3O76'
SECRET_KEY = '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'
app = Flask(__name__)


@app.route('/')
def hello_world():
    # main()
    return 'Hello World!'


@app.route('/gendesign', methods=['POST'])
def gen_design():
    # main()
    # ['picture1', 'picture2', 'range1', 'range2', 'range3', 'range4', 'range5']
    print(request.json.keys())
    return {
        'msg': 'safeer nalla!',
        "status": True,
        'data': {
            'image': ""
        }
    }


@app.route('/checkplag', methods=['POST'])
def check_plague():
    print(request.json.keys())

    return {
        'msg': 'No plague found',
        'status': True
    }


def upload_to_aws(local_file, bucket, s3_file):
    s3 = boto3.client('s3', aws_access_key_id=ACCESS_KEY,
                      aws_secret_access_key=SECRET_KEY)

    try:
        s3.upload_file(local_file, bucket, local_file)
        print("Upload Successful")
        return True
    except FileNotFoundError:
        print("The file was not found")
        return False
    except NoCredentialsError:
        print("Credentials not available")
        return False


def stringToImage(base64_string):
    imgdata = base64.b64decode(base64_string)
    return Image.open(io.BytesIO(imgdata))


def toRGB(image):
    return cv2.cvtColor(np.array(image), cv2.COLOR_BGR2RGB)


@app.route('/uploadfile', methods=['POST'])
def upload_to_s3():
    print("uploading ")
    filename = str(uuid.uuid1())
    imgBase64 = request.json['picture1']
    print(imgBase64)
    imgBase64=imgBase64.split('base64,')[1]
    img = toRGB(stringToImage(imgBase64))

    cv2.imwrite('AWSTEMP/' + filename + '.png', img)
    upload_to_aws("AWSTEMP/" + filename + '.png', 'emotif', filename)
    return {"msg": "https://emotif.s3.amazonaws.com/" +"AWSTEMP/" +filename + '.png',
            "status": True
            }


if __name__ == '__main__':
    # main()
    app.run()
